name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Get short SHA
        id: short-sha
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_ENV
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: boomer12/actions:${{ env.sha }}
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # replace with your AWS region
      -
        name: Get runner IP address
        id: ip
        uses: haythem/public-ip@v1.2
      -
        name: Update EC2 security group to allow SSH from runner IP
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      -
        name: SSH into EC2 and deploy Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stopfirstlineonerror: true  # Stop if any command fails
          script: |
            # Stop and remove any Docker containers that are using port 80 if they exist
            if [ $(sudo docker ps -q -f "expose=80") ]; then
                sudo docker stop $(sudo docker ps -q -f "expose=80")
                sudo docker rm $(sudo docker ps -a -q -f "expose=80")
            fi
            sleep 5

            # Pull the new image and run a new container with it
            sudo docker pull boomer12/actions:${{ env.sha }}
            sudo docker run -d -p 80:80 boomer12/actions:${{ env.sha }}
      -
        name: Update EC2 security group to revoke SSH from runner IP
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
